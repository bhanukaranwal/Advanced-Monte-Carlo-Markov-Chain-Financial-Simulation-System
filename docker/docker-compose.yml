version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/mcmarkov
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../models:/app/models
    depends_on:
      - redis
      - postgres
    networks:
      - mcmarkov-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mcmarkov-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mcmarkov
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mcmarkov-network

  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=mcmarkov_timeseries
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=password
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - mcmarkov-network

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - influxdb
    networks:
      - mcmarkov-network

  jupyter:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    ports:
      - "8888:8888"
    volumes:
      - ../notebooks:/app/notebooks
      - ../data:/app/data
    environment:
      - JUPYTER_TOKEN=mcmarkov
    networks:
      - mcmarkov-network

volumes:
  redis_data:
  postgres_data:
  influxdb_data:
  grafana_data:

networks:
  mcmarkov-network:
    driver: bridge
